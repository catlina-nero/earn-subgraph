type User @entity {
  id: ID!
  pledges: [Pledge!]! @derivedFrom(field: "user")
  availableBalance: BigInt!
  govs: Boolean
  userInterest: BigInt
  frozenBalances: [FrozenBalance!]! @derivedFrom(field: "user")
}

type Pledge @entity {
  id: ID! # 使用keccak256生成的质押ID作为唯一标识
  user: User!
  pledgeType: Int
  amount: BigInt
  timestamp: BigInt
}

type UserPledgeType @entity {
  id: ID! # 可以使用用户地址和质押类型组合生成的唯一标识
  stakedAddress: Bytes # 用户地址
  pledgeType: Int
  pledgeAmount: BigInt
}

type FrozenBalance @entity {
  id: ID! # 使用keccak256生成的冻结ID作为唯一标识
  user: User!
  amount: BigInt
  releaseTime: BigInt
}

type DepositEvent @entity {
  id: ID!
  user: User! # 链接到User实体
  amount: BigInt
  timestamp: BigInt
}

type StakedEvent @entity {
  id: ID!
  pledge: Pledge! # 链接到Pledge实体
  pledgeId: Bytes
  user: User!
  amount: BigInt
  pledgeType: Int
  timestamp: BigInt
}

type UnstakedEvent @entity {
  id: ID!
  pledgeId: Bytes
  user: User!
  amount: BigInt
  pledgeType: Int
  timestamp: BigInt
}

type UserWithdrawEvent @entity {
  id: ID!
  user: User!
  amount: BigInt
  timestamp: BigInt
}

type UserWithdrawUnFrozenEvent @entity {
  id: ID!
  user: User!
  totalUnFrozen: BigInt
  timestamp: BigInt
}

type UserAddInterestEvent @entity {
  id: ID!
  user: User!
  amount: BigInt
  timestamp: BigInt
}

type StakedBackEvent @entity {
  id: ID!
  pledgeId: Bytes
  user: User!
  amount: BigInt
  pledgeType: Int
  timestamp: BigInt
}
